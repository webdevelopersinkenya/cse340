-- Type: account_type

-- DROP TYPE IF EXISTS public.account_type;

CREATE TYPE public.account_type AS ENUM
    ('Client', 'Employee', 'Admin');

ALTER TYPE public.account_type
    OWNER TO mirahcse340_user;

    --TABLE STRUCTURE FOR TABLE CLASSIFICATION;

 CREATE TABLE Public.classification(
classification_id INT GENERATED BY DEFAULT AS IDENTITY,
classification_name CHARACTER VARYING NOT NULL,
CONSTRAINT classification_pk PRIMARY KEY (classification_id)
);

--TABLE STRUCTURE FOR TABLE INVENTORY;

CREATE TABLE IF NOT EXISTS Public.inventory(
inv_id integer NOT  Null GENERATED BY DEFAULT AS IDENTITY,
inv_make character varying NOT NULL,
inv_model character varying NOT NULL,
inv_year character(4) NOT NULL,
inv_description text  NOT NULL,
inv_image character varying NOT NULL,
inv_thumbnail character varying NOT NULL,
inv_price numeric(9,0) NOT NULL,
inv_miles integer NOT NULL,
inv_color character varying NOT NULL,
classification_id integer NOT NULL,
CONSTRAINT inventory_pkey PRIMARY KEY (inv_id)
);

--Create a relationship between classification and inventory Tables

ALTER TABLE IF EXISTS Public.inventory
ADD CONSTRAINT fk_classification FOREIGN KEY(classification_id)
REFERENCES Public.classification(classification_id)MATCH SIMPLE 
ON UPDATE CASCADE
ON DELETE NO ACTION;

--Table Structure for Table Accounts

CREATE TABLE IF NOT EXISTS public.account
(
    account_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    account_firstname character varying NOT NULL,
    account_lastname character varying NOT NULL,
    account_email character varying NOT NULL,
    account_password character varying NOT NULL,
    account_type account_type NOT NULL DEFAULT 'Client'::account_type,
    CONSTRAINT account_pkey PRIMARY KEY (account_id)
);

--Data for Table Classification,

INSERT INTO Public.classification(classification_name)
VALUES('custom'),
('Sport'),
('SUV'),
('Track'),
('Sedan');

--inventory Data

SELECT * FROM public.inventory
ORDER BY inv_id ASC 

-- Modify GM Hummer to read huge interior rather than small interior.
UPDATE inventory
SET inv_description = REPLACE(inv_description, 'small interiors', 'a huge interior')
WHERE inv_model = 'GM Hummer';

-- Update inventory
UPDATE inventory
SET
  inv_image = REPLACE(inv_image, '/images/', '/images/vehicles/'),
  inv_thumbnail = REPLACE(inv_thumbnail, '/images/', '/images/vehicles/');
